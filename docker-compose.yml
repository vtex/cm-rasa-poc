version: '2'

services:
  # =============================== Coach =================================
  # All the models are trained by this coach.
  coach:
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    volumes:
      - ./bot/models/:/bot/models/
    command: "make train"


  # ================================= Bot =====================================
  # Generic Rasa bot, used to run console for example.
  bot:
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    restart: unless-stopped
    volumes:
      - ./bot/:/bot/
    ports:
      - 5006:5006
      - 5004:5004
      - 5005:5005
    env_file:
      - env/bots.env
    depends_on:
      - actions

  # ================================= Actions =================================
  # Rasa middleware used to connect with external APIs.
  actions:
    build:
      context: .
      dockerfile: ./docker/actions.Dockerfile
    ports:
      - 5055:5055
    volumes:
      - ./bot/actions:/bot/actions
    command: sh -c "make actions"

  # =============================== Analytics =================================
  # Analitics ElasticSearch Stack.
  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch.Dockerfile
    restart: unless-stopped
    ports:
      - 9200:9200
      - 9300:9300
    env_file:
      - env/elasticsearch.env
    volumes:
      - esbackup:/usr/share/elasticsearch/backup
      - ./modules/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data

  # Visualization layer of Analitics Stack.
  kibana:
    build:
      context: .
      dockerfile: ./docker/kibana.Dockerfile
    restart: unless-stopped
    ports:
      - 5601:5601
    env_file:
      - env/kibana.env
    depends_on:
      - elasticsearch
    volumes:
      - ./modules/analytics:/usr/share/kibana/analytics

  # =============================== Broker ====================================
  # Custom broker to store Rasa tracker data.
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ./db/rabbitmq:/var/lib/rabbitmq/mnesia
    ports:
      - 15672:15672
    env_file:
      - env/rabbitmq.env

  # Custom broker consumer responsible to store data into ElasticSearch.
  rabbitmq-consumer:
    build:
      context: .
      dockerfile: ./docker/consumer.Dockerfile
    restart: unless-stopped
    volumes:
      - ./modules/rabbitmq/consumer/:/opt/scripts/
    depends_on:
      - rabbitmq
    env_file:
      - env/rabbitmq-consumer.env
    command: python3 /opt/scripts/consume_bot_messages.py

  # ============================ Telegram Bot =================================
  # Specific Rasa bot integrated with Telegram.
  bot_telegram:
      build:
        context: .
        dockerfile: ./docker/bot.Dockerfile
      volumes:
        - ./bot/:/bot/
      env_file:
        - env/bots.env
      ports:
        - 5001:5001
      depends_on:
        - actions
      command: sh -c "make telegram"

  # ============================ Twilio Bot =================================
  # Specific Rasa bot integrated with Twilio.
  bot_twilio:
      build:
        context: .
        dockerfile: ./docker/bot.Dockerfile
      volumes:
        - ./bot/:/bot/
      env_file:
        - env/bots.env
      ports:
        - 5002:5002
      depends_on:
        - actions
      command: sh -c "make twilio"

  # =============================== Notebooks =================================
  # Rasa lab to enhance hyperparameters.
  notebooks:
    build:
      context: .
      dockerfile: ./docker/notebooks.Dockerfile
    env_file:
      - env/notebooks.env
    volumes:
      - ./modules/notebooks:/work/notebooks
      - ./bot/:/bot/
    ports:
      - 8888:8888
volumes:
  notebook_models:
  mongo_data:
  rabbit_data:
  esbackup:
  esdata:
    driver: local
